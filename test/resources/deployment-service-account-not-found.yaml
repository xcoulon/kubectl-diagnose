# vscode-kubernetes-tools: exclude
# (because OpenShift routes seem to be interpreted as pods ¯\_(ツ)_/¯)
--- 
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  namespace: test
  name: sa-notfound
  labels:
    app: sa-notfound
  uid: 420c48e7-3e99-48b6-856d-3d094a667f74
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: sa-notfound
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - status: "True"
      type: Admitted
    routerName: default
    wildcardPolicy: None
--- 
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: sa-notfound
  labels:
    app: sa-notfound
  uid: 599343d9-547f-4d25-a732-c5b9de88ceb9
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: sa-notfound
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  name: sa-notfound
  labels:
    app: sa-notfound
  uid: 9557c49d-c391-4436-bcaa-2ecefd567a81
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sa-notfound
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sa-notfound
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: sa-notfound
      serviceAccountName: sa-notfound
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
status:
  conditions:
  - message: Created new replica set "sa-notfound-59b5d8468f"
    reason: NewReplicaSetCreated
    status: "True"
    type: Progressing
  - message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - message: 'pods "sa-notfound-59b5d8468f-" is forbidden: error looking up service
      account sa-notfound: serviceaccount "sa-notfound" not found'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  observedGeneration: 1
  unavailableReplicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    app: sa-notfound
    pod-template-hash: 59b5d8468f
  namespace: test
  name: sa-notfound-59b5d8468f
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: sa-notfound
    uid: 9557c49d-c391-4436-bcaa-2ecefd567a81
  uid: ab8f645c-3aef-4a08-87aa-36976ffa349a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sa-notfound
      pod-template-hash: 59b5d8468f
  template:
    metadata:
      labels:
        app: sa-notfound
        pod-template-hash: 59b5d8468f
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: sa-notfound
      serviceAccountName: sa-notfound
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
status:
  conditions:
  - message: 'pods "sa-notfound-59b5d8468f-" is forbidden: error looking up service
      account test/sa-notfound: serviceaccount "sa-notfound" not found'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  observedGeneration: 1
  replicas: 0
---
apiVersion: v1
kind: Event
metadata:
  namespace: test
  name: sa-notfound.1727af82b822aa2f
  resourceVersion: "1718825019"
  uid: 106a2fdb-30da-4362-8d0f-d8c57e045034
lastTimestamp: "2022-11-15T06:32:42Z"
type: Normal
reason: ScalingReplicaSet
message: Scaled up replica set sa-notfound-59b5d8468f to 1
count: 1
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  namespace: test
  name: sa-notfound
  uid: 9557c49d-c391-4436-bcaa-2ecefd567a81