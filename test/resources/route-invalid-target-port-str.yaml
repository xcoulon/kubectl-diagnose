# vscode-kubernetes-tools: exclude
# (because OpenShift routes seem to be interpreted as pods ¯\_(ツ)_/¯)
--- 
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: invalid-route-target-port-str
  name: invalid-route-target-port-str
  namespace: test
  resourceVersion: "1726134158"
  uid: 9d295317-f0a1-4cba-9f2b-a3d5eb70f3b8
spec:
  port:
    targetPort: https
  to:
    kind: Service
    name: invalid-route-target-port-str
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - status: "True"
      type: Admitted
    routerName: default
    wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: invalid-route-target-port-str
  name: invalid-route-target-port-str
  namespace: test
  uid: 09358101-53d1-4e95-b16e-3f9fc3068eb0
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: invalid-route-target-port-str
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: invalid-route-target-port-str
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
status:
  availableReplicas: 1
  conditions:
  - message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - message: ReplicaSet "invalid-route-target-port-str-75b7dd78d" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    app: invalid-route-target-port-str
    pod-template-hash: 75b7dd78d
  name: invalid-route-target-port-str-75b7dd78d
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: invalid-route-target-port-str
    uid: 09358101-53d1-4e95-b16e-3f9fc3068eb0
  uid: a8619021-992f-441f-91e3-54f77b6c262c
spec:
  replicas: 1
  selector:
    matchLabels:
      app: invalid-route-target-port-str
      pod-template-hash: 75b7dd78d
  template:
    metadata:
      labels:
        app: invalid-route-target-port-str
        pod-template-hash: 75b7dd78d
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: invalid-route-target-port-str
  name: invalid-route-target-port-str
  namespace: test
  uid: 6d681db5-31dd-4ac6-81dd-3524eecdaec4
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: invalid-route-target-port-str
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: invalid-route-target-port-str
    pod-template-hash: 75b7dd78d
  name: invalid-route-target-port-str-75b7dd78d-mrrqj
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: invalid-route-target-port-str-75b7dd78d
    uid: a8619021-992f-441f-91e3-54f77b6c262c
  uid: 7addb0f1-b3d3-4bcb-bb4f-52c80508cf96
spec:
  containers:
  - image: caddy:2
    imagePullPolicy: IfNotPresent
    name: default
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1003880000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/caddy
      name: caddy-config
    - mountPath: /config/caddy
      name: caddy-config-cache
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wt5g4
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: default-dockercfg-jhpvm
  nodeName: ip-10-0-182-196.us-east-2.compute.internal
  preemptionPolicy: PreemptLowerPriority
  priority: -3
  priorityClassName: sandbox-users-pods
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1003880000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c62,c49
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: caddy-config-port-8080
    name: caddy-config
  - emptyDir: {}
    name: caddy-config-cache
  - name: kube-api-access-wt5g4
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - status: "True"
    type: Initialized
  - status: "True"
    type: Ready
  - status: "True"
    type: ContainersReady
  - status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://2dd497527fa8b486171766ba1dea359e26aa0348d61ab11ac67462de1536f97e
    image: docker.io/library/caddy:2
    imageID: docker.io/library/caddy@sha256:50743fc6130295e9e8feccd8b2f437d8c472f626bf277dc873734ed98219f44f
    lastState: {}
    name: default
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-11-17T06:53:13Z"
  startTime: "2022-11-17T06:53:10Z"