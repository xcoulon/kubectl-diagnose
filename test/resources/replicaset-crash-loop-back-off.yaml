apiVersion: apps/v1
kind: Deployment
metadata:
  name: crash-loop-back-off
  # uid: 7dbd4c1e-e833-49b3-b763-86362a04ead3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crash-loop-back-off
  template:
    metadata:
      labels:
        app: crash-loop-back-off
    spec:
      # serviceAccountName: test
      containers:
      - name: default
        image: gcr.io/google-containers/echoserver:1.8
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
status:
  conditions:
  - message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - message: ReplicaSet "crash-loop-back-off-8644b7cf9d" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  labels:
    app: crash-loop-back-off
  name: crash-loop-back-off-8644b7cf9d
  # ownerReferences:
  # - apiVersion: apps/v1
  #   blockOwnerDeletion: true
  #   controller: true
  #   kind: Deployment
  #   name: crash-loop-back-off
  #   uid: 7dbd4c1e-e833-49b3-b763-86362a04ead3
  # uid: 74037bdb-4dcd-4021-9243-ea6e17e3fc2c
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crash-loop-back-off
  template:
    metadata:
      labels:
        app: crash-loop-back-off
    spec:
      containers:
      - name: default
        image: gcr.io/google-containers/echoserver:1.8
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: crash-loop-back-off
  name: crash-loop-back-off-8644b7cf9d-s2fpd
  # ownerReferences:
  # - apiVersion: apps/v1
  #   blockOwnerDeletion: true
  #   controller: true
  #   kind: ReplicaSet
  #   name: crash-loop-back-off-8644b7cf9d
  #   uid: 74037bdb-4dcd-4021-9243-ea6e17e3fc2c
spec:
  containers:
  - image: gcr.io/google-containers/echoserver:1.8
    imagePullPolicy: Always
    name: default
    ports:
    - containerPort: 8080
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 20Mi
status:
  conditions:
  - message: 'containers with unready status: [default]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - message: 'containers with unready status: [default]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  containerStatuses:
  - containerID: cri-o://db593dd7dc1fac85e1882dab7c27c7a21959ee16d7c2e83bf68bae27a2fc79a5
    image: gcr.io/google-containers/echoserver:1.8
    imageID: gcr.io/google-containers/echoserver@sha256:cb3386f863f6a4b05f33c191361723f9d5927ac287463b1bea633bf859475969
    name: default
    ready: false
    restartCount: 6
    started: false
    state:
      waiting:
        message: back-off 5m0s restarting failed container=default pod=crash-loop-back-off-8644b7cf9d-s2fpd_xcoulon-2-dev(024449bc-83cf-4251-b39d-3d63ae03d6a2)
        reason: CrashLoopBackOff