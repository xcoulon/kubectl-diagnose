# vscode-kubernetes-tools: exclude
# (because OpenShift routes seem to be interpreted as pods ¯\_(ツ)_/¯)
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: sts-sa-notfound
  name: sts-sa-notfound
  namespace: test
  uid: f68ba2f1-25c5-44cd-8a30-6c58d93b8102
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: sts-sa-notfound
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - status: "True"
      type: Admitted
    routerName: default
    wildcardPolicy: None
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sts-sa-notfound
  name: sts-sa-notfound
  namespace: test
  uid: 862780a7-14d4-49b5-9099-4b7e10dbc01f
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: sts-sa-notfound
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sts-sa-notfound
  name: sts-sa-notfound
  namespace: test
  uid: c9af6dbb-e7ed-46c7-a97c-3e174b77a470
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sts-sa-notfound
  serviceName: ""
  template:
    metadata:
      labels:
        app: sts-sa-notfound
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: unknown
      serviceAccountName: unknown
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: caddy-config-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: gp2
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 0
  replicas: 0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app: sts-sa-notfound
  name: caddy-config-cache-sts-sa-notfound-0
  namespace: test
  resourceVersion: "1756784702"
  uid: f48eea49-b5e6-4544-968b-b17239649954
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
  volumeMode: Filesystem
status:
  phase: Pending
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  name: gp2
  uid: 75848c6c-97e2-4152-b67c-de1ea388ae6b
allowVolumeExpansion: true
parameters:
  encrypted: "true"
  type: gp2
provisioner: kubernetes.io/aws-ebs
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
--- 
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gp2-csi
  uid: 67a78c20-1641-46f8-a071-38c9513cdd56
allowVolumeExpansion: true
parameters:
  encrypted: "true"
  type: gp2
provisioner: ebs.csi.aws.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gp3-csi
  uid: 55c0d630-6b4c-49d6-bb79-757024c9326d
allowVolumeExpansion: true
parameters:
  encrypted: "true"
  type: gp3
provisioner: ebs.csi.aws.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: Event
metadata:
  creationTimestamp: "2022-11-27T08:28:44Z"
  name: sts-sa-notfound.172b63b6f3bd1130
  namespace: test
  resourceVersion: "1766137439"
  uid: de6fe343-a96e-4783-a082-068982e9bc09
count: 2
eventTime: null
firstTimestamp: "2022-11-27T08:28:44Z"
lastTimestamp: "2022-11-27T08:51:34Z"
message: 'create Pod sts-sa-notfound-0 in StatefulSet sts-sa-notfound
  failed error: pods "sts-sa-notfound-0" is forbidden: error looking up
  service account test/unknown: serviceaccount "unknown" not found'
involvedObject:
  apiVersion: apps/v1
  kind: StatefulSet
  name: sts-sa-notfound
  namespace: test
  uid: c9af6dbb-e7ed-46c7-a97c-3e174b77a470
reason: FailedCreate
reportingComponent: ""
reportingInstance: ""
source:
  component: statefulset-controller
type: Warning