# vscode-kubernetes-tools: exclude
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: sts-invalid-sc
  name: sts-invalid-sc
  namespace: test
  uid: cbade70f-f3e8-4ff6-9b8a-7dccbc639466
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: sts-invalid-sc
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - status: "True"
      type: Admitted
    routerName: default
    wildcardPolicy: None
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sts-invalid-sc
  name: sts-invalid-sc
  namespace: test
  uid: 27f9cc8c-96a4-4d49-9539-b4f620ad98eb
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    app: sts-invalid-sc
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: sts-invalid-sc
  name: sts-invalid-sc
  namespace: test
  uid: 78ae2f0a-95a1-43d1-a589-2bb0e6a80521
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sts-invalid-sc
  serviceName: ""
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sts-invalid-sc
    spec:
      containers:
      - image: caddy:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddy-config
        - mountPath: /config/caddy
          name: caddy-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 1003870000
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: caddy-config-port-8080
        name: caddy-config
      - emptyDir: {}
        name: caddy-config-cache
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: caddy-config-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: unknown
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 0
  collisionCount: 0
  currentReplicas: 1
  currentRevision: sts-invalid-sc-8568969596
  observedGeneration: 1
  replicas: 1
  updateRevision: sts-invalid-sc-8568969596
  updatedReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  generateName: sts-invalid-sc-
  labels:
    app: sts-invalid-sc
    controller-revision-hash: sts-invalid-sc-8568969596
    statefulset.kubernetes.io/pod-name: sts-invalid-sc-0
  name: sts-invalid-sc-0
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: sts-invalid-sc
    uid: 78ae2f0a-95a1-43d1-a589-2bb0e6a80521
  uid: de159b16-20a6-4fa8-a9d3-002c2238b22d
  resourceVersion: "1"
spec:
  containers:
  - image: caddy:2
    imagePullPolicy: IfNotPresent
    name: default
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1003880000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/caddy
      name: caddy-config
    - mountPath: /config/caddy
      name: caddy-config-cache
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-qbr5b
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: sts-invalid-sc-0
  imagePullSecrets:
  - name: default-dockercfg-jhpvm
  preemptionPolicy: PreemptLowerPriority
  priority: -3
  priorityClassName: sandbox-users-pods
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1003880000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c62,c49
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: caddy-config-cache
    persistentVolumeClaim:
      claimName: caddy-config-cache-sts-invalid-sc-0
  - configMap:
      defaultMode: 420
      name: caddy-config-port-8080
    name: caddy-config
  - name: kube-api-access-qbr5b
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - message: '0/12 nodes are available: 12 pod has unbound immediate PersistentVolumeClaims.
      preemption: 0/12 nodes are available: 12 Preemption is not helpful for scheduling.'
    reason: Unschedulable
    status: "False"
    type: PodScheduled
  phase: Pending
  qosClass: Burstable
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app: sts-invalid-sc
  name: caddy-config-cache-sts-invalid-sc-0
  namespace: test
  uid: 0a7be822-c2ba-402d-a984-e2d706aac14c
  resourceVersion: "1"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: unknown
  volumeMode: Filesystem
status:
  phase: Pending
---
apiVersion: v1
kind: Event
metadata:
  name: sts-invalid-sc-0.172c01813f86f884
  namespace: test
  uid: f00c765c-5aff-4751-a6f6-39ed3ede0940
type: Warning
eventTime: "2022-11-26T08:40:16.475828Z"
lastTimestamp: null
message: '0/12 nodes are available: 12 pod has unbound immediate PersistentVolumeClaims.
  preemption: 0/12 nodes are available: 12 Preemption is not helpful for scheduling.'
firstTimestamp: null
action: Scheduling
involvedObject:
  apiVersion: v1
  kind: Pod
  name: sts-invalid-sc-0
  namespace: test
  uid: de159b16-20a6-4fa8-a9d3-002c2238b22d
  resourceVersion: "1"
reason: FailedScheduling
source: {}
---
apiVersion: v1
kind: Event
metadata:
  creationTimestamp: "2022-11-26T08:35:11Z"
  name: caddy-config-cache-sts-invalid-sc-0.172c013a516e4dbd
  namespace: test
  uid: 20d4e18f-1a5a-407b-bc85-63c8c1420a79
type: Warning
reason: ProvisioningFailed
message: storageclass.storage.k8s.io "unknown" not found
count: 269
eventTime: null
firstTimestamp: "2022-11-26T08:35:11Z"
lastTimestamp: "2022-11-26T09:40:20Z"
involvedObject:
  apiVersion: v1
  kind: PersistentVolumeClaim
  name: caddy-config-cache-sts-invalid-sc-0
  namespace: test
  uid: 0a7be822-c2ba-402d-a984-e2d706aac14c
  resourceVersion: "1"
