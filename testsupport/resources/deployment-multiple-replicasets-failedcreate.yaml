# a case where multiple subsequent attempts to fix a deployment 
# result in having multiple replicasets

--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"deploy-multiple-rs"},"name":"deploy-multiple-rs","namespace":"xcoulon-dev"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"deploy-multiple-rs"}},"template":{"metadata":{"labels":{"app":"deploy-multiple-rs"}},"spec":{"containers":[{"args":["--secure-listen-address=0.0.0.0:8081","--upstream=http://127.0.0.1:8080","--config-file=/etc/kube-rbac-proxy/config.yaml","--tls-cert-file=/etc/tls/private/tls.crt","--tls-private-key-file=/etc/tls/private/tls.key","--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256","--tls-min-version=VersionTLS12","-v=10"],"image":"quay.io/brancz/kube-rbac-proxy:v0.14.0","imagePullPolicy":"IfNotPresent","name":"kube-rbac-proxy","ports":[{"containerPort":8081,"name":"proxy","protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/etc/tls/private","name":"secret-deploy-multiple-rs-tls"},{"mountPath":"/etc/kube-rbac-proxy","name":"secret-kube-rbac-proxy"}]},{"allowPrivilegeEscalation":false,"image":"deploy-multiple-rs:2","name":"default","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"100Mi"},"requests":{"cpu":"100m","memory":"20Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"runAsNonRoot":true},"volumeMounts":[{"mountPath":"/etc/deploy-multiple-rs","name":"deploy-multiple-rs-config"},{"mountPath":"/config/deploy-multiple-rs","name":"deploy-multiple-rs-config-cache"}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccount":"default","serviceAccountName":"default","volumes":[{"configMap":{"name":"deploy-multiple-rs-config-port-8080"},"name":"deploy-multiple-rs-config"},{"emptyDir":{},"name":"deploy-multiple-rs-config-cache"},{"name":"secret-kube-rbac-proxy","secret":{"defaultMode":420,"secretName":"kube-rbac-proxy-federate"}},{"name":"secret-deploy-multiple-rs-tls","secret":{"defaultMode":420,"secretName":"deploy-multiple-rs-tls"}}]}}}}
  creationTimestamp: "2022-12-24T08:31:01Z"
  generation: 3
  labels:
    app: deploy-multiple-rs
  name: deploy-multiple-rs
  namespace: test
  resourceVersion: "1867286435"
  uid: 06f90640-de89-43ed-9a8c-df804e290528
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: deploy-multiple-rs
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-multiple-rs
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8081
        - --upstream=http://127.0.0.1:8080
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-min-version=VersionTLS12
        - -v=10
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8081
          name: proxy
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-deploy-multiple-rs-tls
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy
      - image: deploy-multiple-rs:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/deploy-multiple-rs
          name: deploy-multiple-rs-config
        - mountPath: /config/deploy-multiple-rs
          name: deploy-multiple-rs-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: deploy-multiple-rs-config-port-8080
        name: deploy-multiple-rs-config
      - emptyDir: {}
        name: deploy-multiple-rs-config-cache
      - name: secret-kube-rbac-proxy
        secret:
          defaultMode: 420
          secretName: kube-rbac-proxy-federate
      - name: secret-deploy-multiple-rs-tls
        secret:
          defaultMode: 420
          secretName: deploy-multiple-rs-tls
status:
  conditions:
  - lastTransitionTime: "2022-12-24T08:31:01Z"
    lastUpdateTime: "2022-12-24T08:31:01Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2022-12-24T08:31:01Z"
    lastUpdateTime: "2022-12-24T08:31:01Z"
    message: 'pods "deploy-multiple-rs-65888449d9-" is forbidden: error looking up service account
      xcoulon-dev/other: serviceaccount "other" not found'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  - lastTransitionTime: "2022-12-24T08:31:01Z"
    lastUpdateTime: "2022-12-24T08:31:53Z"
    message: ReplicaSet "deploy-multiple-rs-c5d7d87f" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 3
  replicas: 1
  unavailableReplicas: 2
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: "2022-12-24T08:31:13Z"
  generation: 1
  labels:
    app: deploy-multiple-rs
    pod-template-hash: 57c7c5bd67
  name: deploy-multiple-rs-57c7c5bd67
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: deploy-multiple-rs
    uid: 06f90640-de89-43ed-9a8c-df804e290528
  resourceVersion: "1867284034"
  uid: c2acf4ee-46ff-48d5-999a-35a1f0ab6e5f
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy-multiple-rs
      pod-template-hash: 57c7c5bd67
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-multiple-rs
        pod-template-hash: 57c7c5bd67
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8081
        - --upstream=http://127.0.0.1:8080
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-min-version=VersionTLS12
        - -v=10
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8081
          name: proxy
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-deploy-multiple-rs-tls
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy
      - image: deploy-multiple-rs:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/deploy-multiple-rs
          name: deploy-multiple-rs-config
        - mountPath: /config/deploy-multiple-rs
          name: deploy-multiple-rs-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: deploy-multiple-rs-config-port-8080
        name: deploy-multiple-rs-config
      - emptyDir: {}
        name: deploy-multiple-rs-config-cache
      - name: secret-kube-rbac-proxy
        secret:
          defaultMode: 420
          secretName: kube-rbac-proxy-federate
      - name: secret-deploy-multiple-rs-tls
        secret:
          defaultMode: 420
          secretName: deploy-multiple-rs-tls
status:
  conditions:
  - lastTransitionTime: "2022-12-24T08:31:13Z"
    message: 'pods "deploy-multiple-rs-57c7c5bd67-" is forbidden: unable to validate against
      any security context constraint: [provider "container-build": Forbidden: not
      usable by user or serviceaccount, provider "anyuid": Forbidden: not usable
      by user or serviceaccount, provider "pipelines-scc": Forbidden: not usable
      by user or serviceaccount, provider restricted-v2: .spec.securityContext.fsGroup:
      Invalid value: []int64{65534}: 65534 is not an allowed group, spec.containers[0].securityContext.runAsUser:
      Invalid value: 65534: must be in the ranges: [1003870000, 1003879999], spec.containers[1].securityContext.runAsUser:
      Invalid value: 65534: must be in the ranges: [1003870000, 1003879999], provider
      restricted: .spec.securityContext.fsGroup: Invalid value: []int64{65534}:
      65534 is not an allowed group, pod.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]:
      Forbidden: seccomp may not be set, pod.metadata.annotations[container.seccomp.security.alpha.kubernetes.io/kube-rbac-proxy]:
      Forbidden: seccomp may not be set, pod.metadata.annotations[container.seccomp.security.alpha.kubernetes.io/default]:
      Forbidden: seccomp may not be set, provider "nonroot-v2": Forbidden: not usable
      by user or serviceaccount, provider "nonroot": Forbidden: not usable by user
      or serviceaccount, provider "pcap-dedicated-admins": Forbidden: not usable
      by user or serviceaccount, provider "hostmount-anyuid": Forbidden: not usable
      by user or serviceaccount, provider "log-collector-scc": Forbidden: not usable
      by user or serviceaccount, provider "machine-api-termination-handler": Forbidden:
      not usable by user or serviceaccount, provider "hostnetwork-v2": Forbidden:
      not usable by user or serviceaccount, provider "hostnetwork": Forbidden: not
      usable by user or serviceaccount, provider "hostaccess": Forbidden: not usable
      by user or serviceaccount, provider "splunkforwarder": Forbidden: not usable
      by user or serviceaccount, provider "node-exporter": Forbidden: not usable
      by user or serviceaccount, provider "privileged": Forbidden: not usable by
      user or serviceaccount]'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  observedGeneration: 1
  replicas: 0
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2022-12-24T08:31:01Z"
  generation: 2
  labels:
    app: deploy-multiple-rs
    pod-template-hash: 65888449d9
  name: deploy-multiple-rs-65888449d9
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: deploy-multiple-rs
    uid: 06f90640-de89-43ed-9a8c-df804e290528
  resourceVersion: "1867286417"
  uid: 52a8121f-236c-46c3-9e95-5772ef1af704
spec:
  replicas: 0
  selector:
    matchLabels:
      app: deploy-multiple-rs
      pod-template-hash: 65888449d9
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-multiple-rs
        pod-template-hash: 65888449d9
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8081
        - --upstream=http://127.0.0.1:8080
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-min-version=VersionTLS12
        - -v=10
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8081
          name: proxy
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-deploy-multiple-rs-tls
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy
      - image: deploy-multiple-rs:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/deploy-multiple-rs
          name: deploy-multiple-rs-config
        - mountPath: /config/deploy-multiple-rs
          name: deploy-multiple-rs-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: other
      serviceAccountName: other
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: deploy-multiple-rs-config-port-8080
        name: deploy-multiple-rs-config
      - emptyDir: {}
        name: deploy-multiple-rs-config-cache
      - name: secret-kube-rbac-proxy
        secret:
          defaultMode: 420
          secretName: kube-rbac-proxy-federate
      - name: secret-deploy-multiple-rs-tls
        secret:
          defaultMode: 420
          secretName: deploy-multiple-rs-tls
status:
  observedGeneration: 2
  replicas: 0
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: "2022-12-24T08:31:53Z"
  generation: 2
  labels:
    app: deploy-multiple-rs
    pod-template-hash: c5d7d87f
  name: deploy-multiple-rs-c5d7d87f
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: deploy-multiple-rs
    uid: 06f90640-de89-43ed-9a8c-df804e290528
  resourceVersion: "1867286432"
  uid: c68ea672-8747-4b7f-9e69-22e60d73aff8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy-multiple-rs
      pod-template-hash: c5d7d87f
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: deploy-multiple-rs
        pod-template-hash: c5d7d87f
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8081
        - --upstream=http://127.0.0.1:8080
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-min-version=VersionTLS12
        - -v=10
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8081
          name: proxy
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-deploy-multiple-rs-tls
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy
      - image: deploy-multiple-rs:2
        imagePullPolicy: IfNotPresent
        name: default
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/deploy-multiple-rs
          name: deploy-multiple-rs-config
        - mountPath: /config/deploy-multiple-rs
          name: deploy-multiple-rs-config-cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: deploy-multiple-rs-config-port-8080
        name: deploy-multiple-rs-config
      - emptyDir: {}
        name: deploy-multiple-rs-config-cache
      - name: secret-kube-rbac-proxy
        secret:
          defaultMode: 420
          secretName: kube-rbac-proxy-federate
      - name: secret-deploy-multiple-rs-tls
        secret:
          defaultMode: 420
          secretName: deploy-multiple-rs-tls
status:
  fullyLabeledReplicas: 1
  observedGeneration: 2
  replicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2022-12-24T08:31:53Z"
  generateName: deploy-multiple-rs-c5d7d87f-
  labels:
    app: deploy-multiple-rs
    pod-template-hash: c5d7d87f
  name: deploy-multiple-rs-c5d7d87f-whx2l
  namespace: test
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: deploy-multiple-rs-c5d7d87f
    uid: c68ea672-8747-4b7f-9e69-22e60d73aff8
  resourceVersion: "1867286433"
  uid: fe5dc6a3-b4a8-4d7b-95d5-ece4ee648c8c
spec:
  containers:
  - args:
    - --secure-listen-address=0.0.0.0:8081
    - --upstream=http://127.0.0.1:8080
    - --config-file=/etc/kube-rbac-proxy/config.yaml
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    - --tls-min-version=VersionTLS12
    - -v=10
    image: quay.io/brancz/kube-rbac-proxy:v0.14.0
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 8081
      name: proxy
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1003870000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-deploy-multiple-rs-tls
    - mountPath: /etc/kube-rbac-proxy
      name: secret-kube-rbac-proxy
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-l2zzk
      readOnly: true
  - image: deploy-multiple-rs:2
    imagePullPolicy: IfNotPresent
    name: default
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 20Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1003870000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/deploy-multiple-rs
      name: deploy-multiple-rs-config
    - mountPath: /config/deploy-multiple-rs
      name: deploy-multiple-rs-config-cache
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-l2zzk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: default-dockercfg-r6jhg
  nodeName: ip-10-0-175-2.us-east-2.compute.internal
  preemptionPolicy: PreemptLowerPriority
  priority: -3
  priorityClassName: sandbox-users-pods
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1003870000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c62,c44
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: deploy-multiple-rs-config-port-8080
    name: deploy-multiple-rs-config
  - emptyDir: {}
    name: deploy-multiple-rs-config-cache
  - name: secret-kube-rbac-proxy
    secret:
      defaultMode: 420
      secretName: kube-rbac-proxy-federate
  - name: secret-deploy-multiple-rs-tls
    secret:
      defaultMode: 420
      secretName: deploy-multiple-rs-tls
  - name: kube-api-access-l2zzk
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-12-24T08:31:53Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-12-24T08:31:53Z"
    message: 'containers with unready status: [kube-rbac-proxy default]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-12-24T08:31:53Z"
    message: 'containers with unready status: [kube-rbac-proxy default]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-12-24T08:31:53Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: deploy-multiple-rs:2
    imageID: ""
    lastState: {}
    name: default
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  - image: quay.io/brancz/kube-rbac-proxy:v0.14.0
    imageID: ""
    lastState: {}
    name: kube-rbac-proxy
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  hostIP: 10.0.175.2
  phase: Pending
  qosClass: Burstable
  startTime: "2022-12-24T08:31:53Z"